
cat tmp/Wollstein.hg19.asd_tee | bammds_parallel -j70% --compress --round-robin --header 2 --block 500k --pipe 'cat | bammds_merge --debug   | bammds_allelesharing' | bammds_allelesharingsum >tmp/Wollstein.hg19.asd


parallel options:

--round-robin
--round  Normally --pipe will give a single block to each instance of the command. With --round-robin all blocks will at random be written to
         commands already running. This is useful if the command takes a long time to initialize.
--pipe
--spreadstdin
         Spread input to jobs on stdin (standard input). Read a block of data from stdin (standard input) and give one block of data as input to one
         job.

--block size
--block-size size
	Size of block in bytes. The size can be postfixed with K, M, G, T, P, k, m, g, t, or p which would multiply the size with 1024, 1048576,
   	1073741824, 1099511627776, 1125899906842624, 1000, 1000000, 1000000000, 1000000000000, or 1000000000000000 respectively.

	GNU parallel tries to meet the block size but can be off by the length of one record. For performance reasons size should be bigger than a
	single record.

        size defaults to 1M.

        See --pipe for use of this.

-j N
--max-procs N
-P N   Number of jobslots. Run up to N jobs in parallel.  0 means as many as possible. Default is 100% which will run one job per CPU core.


cat tmp/Wollstein.hg19.asd_tee | bammds_parallel -j70% --compress --round-robin --header 2 --block 500k --pipe 'cat | bammds_merge --debug   | bammds_allelesharing' | bammds_allelesharingsum 

bammds_fillout tmp/Wollstein.hg19.legend.csv > tmp/Wollstein.hg19.legend.filled.csv

bammds_plot.r tmp/Wollstein.hg19.asd tmp/Wollstein.hg19.legend.csv tmp/Wollstein.hg19.legend.filled.csv Wollstein.hg19.pdf 1 2 T F T
